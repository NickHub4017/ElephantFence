/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package elephantfence;

import java.awt.Color;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;

/**
 *
 * @author NRV
 */
public class FenceVisual extends javax.swing.JFrame {

    /**
     * Creates new form FenceVisual
     */
    static boolean receved=false;
    static String selectnode="0";
   static ElephantFence sender;
   static  Detector detector;
    public FenceVisual() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Node 1");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Node 2");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Node 3");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton1))
                .addContainerGap(280, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(170, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        try{
       sender.sendData("4");
       detector.sendData("4");
       selectnode="4";
       receved=false;
        }catch(Exception e){
        }
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        try{
       sender.sendData("5");
       detector.sendData("5");
       selectnode="5";
       receved=false;
        }catch(Exception e){
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        try{
       sender.sendData("6");
       detector.sendData("6");
       selectnode="6";
       receved=false;
        }catch(Exception e){
        }
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenceVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenceVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenceVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenceVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        DBLink x=new DBLink();
        detector = new Detector();
        detector.start();
       try {
           Thread.sleep(3000);
       } catch (InterruptedException ex) {
           Logger.getLogger(FenceVisual.class.getName()).log(Level.SEVERE, null, ex);
       }
        sender = new ElephantFence();
        sender.start();
       
        
      
        System.out.println("Started");
        
        //x.addNode();
        System.out.println(x.getAllNodes().size());
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenceVisual().setVisible(true);
            }
        });
    }
    
    public static void recevdataDetector(String rawdata){
     String[] data=rawdata.split(" ");
        if(data[0].contains("#d")){
                if(data[1].equals("4")){
                    jButton1.setBackground(Color.GREEN);
                    receved=true;
           
                }
                else if(data[1].equals("5")){
                    jButton2.setBackground(Color.GREEN);
                     receved=true;
           
                }
                else if(data[1].equals("6")){
                    jButton3.setBackground(Color.GREEN);
                     receved=true;
                }
            
        }
    }
    
   public static void recevdataSender(String rawdata){
//       System.out.println("---> "+data);
     String[] data=rawdata.split(" ");
       System.out.println("Test rec"+receved);
    if(data[0].contains("#s")){   
       if (data[1].contains("online")){
           jButton1.setBackground(Color.ORANGE);
           jButton2.setBackground(Color.ORANGE);
           jButton3.setBackground(Color.ORANGE);
           
       }
       if (data.length==3 && data[2].contains("ack")){
           String j=data[1];
           if(j.equals("4")){
               jButton1.setBackground(Color.YELLOW);
           }
           else if(j.equals("5")){
               jButton2.setBackground(Color.YELLOW);
           }
           else if(j.equals("6")){
               jButton3.setBackground(Color.YELLOW);
           }
       }
       
       if (data[1].contains("normal")){
           
       }
       
       if (data[1].contains("preamble")){
           
       }
       
       if (data[1].contains("nodeid")){
           
       }
       
       if (data[1].contains("postable")){
           
       }
       
       if (data.length==3 && data[2].contains("trail")){
           String j=data[1];
           try {
               detector.sendData("R");
               //detector.sendData(selectnode);
           } catch (IOException ex) {
               System.out.println("Error in sending to detector");
           }
           
       }
       
       if (data.length==3 && data[2].contains("end_trail")){
           //System.out.println("in if "+receved);
           if( !receved){
               
               
                
            String jp=data[1];
                    System.out.println(jp);
           if(jp.equals("4")){
               jButton1.setBackground(Color.RED);
           }
           else if(jp.equals("5")){
               jButton2.setBackground(Color.RED);
           }
           else if(jp.equals("6")){
               jButton3.setBackground(Color.RED);
           }
       
       
           }
           
       }
       
   }    
   }
   
    public static void updatedata(String data,boolean isfromSender) { 
    synchronized (FenceVisual.class) {
        if(isfromSender){
             recevdataSender(data);
        }
        else{
            recevdataDetector(data);
        }
    }
  }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton jButton1;
    private static javax.swing.JButton jButton2;
    private static javax.swing.JButton jButton3;
    // End of variables declaration//GEN-END:variables
}
